<?php
namespace App\Shell;

use Cake\Console\Shell;
use Cake\Datasource\ConnectionManager;
use Cake\Filesystem\File;
use Cake\I18n\FrozenTime;
use Cake\ORM\TableRegistry;
use Symfony\Component\Process\Process;

/**
 * BackupDatabase shell command.
 * This code is taken from Camelot IE Demonstration System, developed by Faculty of IT, Monash University
 */
class BackupDatabaseShell extends Shell
{

    /**
     *
     * Manage the available sub-commands along with their arguments and help
     *
     * @see http://book.cakephp.org/3.0/en/console-and-shells.html#configuring-options-and-generating-help
     *
     * @return \Cake\Console\ConsoleOptionParser
     */
    public function getOptionParser()
    {
        $parser = parent::getOptionParser();

        return $parser;
    }

    /**
     * main() method.
     *
     * @return bool|int|null Success or error code.
     */
    public function main()
    {
        $connection = ConnectionManager::get('default'); // TODO DRY
        $config = $connection->config();
        $db = $config['database'];
        $scriptFile = new File(SCHEMA_DIR . $config['file_prefix'] . $config['file_type']); //TODO Add multiple file support

        $process = new Process([
            'mysqldump',
            "--user={$config['username']}",
            "--password={$config['password']}",
            "--host={$config['host']}",
            '--add-drop-table',
            $db,
        ]);

        $process->run();
        $dumpedData = $process->getOutput();
        if ($process->getExitCode() !== 0) {
            $this->err("Error dumping tables");
            $error = $process->getErrorOutput();
            if ($error) {
                $this->err($error);
            }

            return false;
        } elseif (!trim($dumpedData)) {
            $this->err("mysqldump completed but returned no data");

            return false;
        }

        $newSqlScript = <<<SQL
-- ===============================================================================
--   This file is automatically generated by the "bin/cake backup_database" shell.
-- ===============================================================================

-- -----------------------------------------------------------------------------------------
-- Output from "mysqldump --add-drop-table"
-- -----------------------------------------------------------------------------------------

$dumpedData
SQL;

        $this->out($newSqlScript);
        $scriptFile->write($newSqlScript);
        $this->success("Wrote " . strlen($newSqlScript) . " bytes of output to " . $scriptFile->path);
        $this->out('Done!');

        return true;
    }
}
